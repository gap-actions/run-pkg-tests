name: CI

# Trigger the workflow on push or pull request
on:
  push:
    branches:
      - master
  pull_request:

env:
  CHERE_INVOKING: 1

jobs:
  test:
    name: "Test action (testfile: '${{ matrix.testfile }}', mode: '${{ matrix.mode }}', NO_COVERAGE: '${{ matrix.no-coverage }}',  pre-gap: '${{ matrix.pre-gap }}',  warnings-as-errors: '${{ matrix.warn }})"
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        no-coverage: ['false']
        testfile: ['']
        warn: ['true']
        pre-gap: ['']
        mode: ['default']
        include:
          # test no-coverage
          - no-coverage: 'true'
            testfile: ''
            warn: 'true'
            pre-gap: ''
            mode: 'default'
          # test testfile
          - no-coverage: 'false'
            testfile: 'tst/testall.g'
            warn: 'true'
            pre-gap: ''
            mode: 'default'
          # test warn
          - no-coverage: 'false'
            testfile: ''
            warn: 'false'
            pre-gap: ''
            mode: 'default'
          # test pre-gap
          - no-coverage: 'false'
            testfile: ''
            warn: 'true'
            pre-gap: 'time'
            mode: 'default'
          # test mode
          - no-coverage: 'false'
            testfile: ''
            warn: 'true'
            pre-gap: ''
            mode: 'onlyneeded'
          - no-coverage: 'false'
            testfile: ''
            warn: 'true'
            pre-gap: ''
            mode: 'loadall'
    steps:
      # the order of the checkout actions is important because all contents of
      # the target folder of the checkout action is removed
      - name: "Clone the Example package"
        uses: actions/checkout@v5
        with:
          repository: gap-packages/example
      - name: "Check out this repository"
        uses: actions/checkout@v5
        with:
          path: this-action/
      - uses: gap-actions/setup-gap@v2
        with:
          GAP_PKGS_TO_BUILD: ''
      - uses: gap-actions/build-pkg@v1
      - uses: ./this-action/
        with:
          NO_COVERAGE: ${{ matrix.no-coverage }}
          testfile: ${{ matrix.testfile }}
          warnings-as-errors: ${{ matrix.warn }}
          pre-gap: ${{ matrix.pre-gap }}
          mode: ${{ matrix.mode }}
  test-failure:
    name: "Validate input (testfile: '${{ matrix.testfile }}', mode: '${{ matrix.mode }}', NO_COVERAGE: '${{ matrix.no-coverage }}',  pre-gap: '${{ matrix.pre-gap }}',  warnings-as-errors: '${{ matrix.warn }})"
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        no-coverage: ['false']
        testfile: ['']
        warn: ['true']
        pre-gap: ['']
        mode: ['default']
        include:
          # test no-coverage
          - no-coverage: 'nonsense'
            testfile: ''
            warn: 'true'
            pre-gap: ''
            mode: 'default'
          # test warn
          - no-coverage: 'false'
            testfile: ''
            warn: 'nonsense'
            pre-gap: ''
            mode: 'default'
          # test pre-gap
          - no-coverage: 'false'
            testfile: ''
            warn: 'true'
            pre-gap: 'nonsense'
            mode: 'default'
          # test mode
          - no-coverage: 'false'
            testfile: ''
            warn: 'true'
            pre-gap: ''
            mode: 'nonsense'
        exclude:
          - no-coverage: 'false'
            testfile: ''
            warn: 'true'
            pre-gap: ''
            mode: 'default'
    steps:
      - name: "Clone the Example package"
        uses: actions/checkout@v5
        with:
          repository: gap-packages/example
      - name: "Check out this repository"
        uses: actions/checkout@v5
        with:
          path: this-action/
      - uses: gap-actions/setup-gap@v2
        with:
          GAP_PKGS_TO_BUILD: ''
      - uses: gap-actions/build-pkg@v1
      - uses: ./this-action/
        with:
          NO_COVERAGE: ${{ matrix.no-coverage }}
          testfile: ${{ matrix.testfile }}
          warnings-as-errors: ${{ matrix.warn }}
          pre-gap: ${{ matrix.pre-gap }}
          mode: ${{ matrix.mode }}
        continue-on-error: true
        id: bad-input
      - name: Previous step fails
        if: steps.bad-input.outcome != 'failure'
        run: exit 1
