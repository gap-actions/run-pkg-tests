name: 'Run package tests'
description: 'Run package tests'
inputs:
  NO_COVERAGE:
    description: 'set to a non-empty string to suppress gathering coverage'
    required: false
    default: ''
  GAP_TESTFILE:
    description: 'The name of the GAP file to be read for executing the package tests'
    required: false
    default: 'tst/testall.g'
runs:
  using: "composite"
  steps:
      - name: "Run tests"
        run: |
         set -ex

         GAPROOT=${GAPROOT-$HOME/gap}

         # set up a custom GAP root containing only this package, so that
         # we can force GAP to load the correct version of this package
         # (we already did that in build_pkg.sh, but we do it again here,
         # to allow the occasional instance where a package wants to also
         # run the tests of others packages, by invoking this script multiple
         # times in different directories)
         mkdir -p gaproot/pkg/
         ln -f -s $PWD gaproot/pkg/

         # start GAP with custom GAP root, to ensure correct package version is loaded
         GAP="$GAPROOT/bin/gap.sh -l $PWD/gaproot; --quitonbreak"

         # Unless explicitly turned off by setting the NO_COVERAGE environment variable,
         # we collect coverage data
         if [[ -z $NO_COVERAGE ]]; then
             mkdir -p ${COVDIR-coverage}
             GAP="$GAP --cover ${COVDIR-coverage}/$(mktemp XXXXXX).coverage"
         fi

         # TODO: honor TestFile from PackageInfo record, but make sure that it
         # is for the package in the current directory
         $GAP ${GAP_TESTFILE:-tst/testall.g}

        env:
          NO_COVERAGE: ${{ inputs.NO_COVERAGE }}
          GAP_TESTFILE: ${{ inputs.GAP_TESTFILE }}
        shell: bash
